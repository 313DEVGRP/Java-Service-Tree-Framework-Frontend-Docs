{"version":3,"file":"js/worker.9c2f0192.js","mappings":"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","sources":["webpack://@affine/web/../core/src/modules/docs-search/worker/in-worker.ts","webpack://@affine/web/webpack/bootstrap","webpack://@affine/web/webpack/runtime/chunk loaded","webpack://@affine/web/webpack/runtime/define property getters","webpack://@affine/web/webpack/runtime/ensure chunk","webpack://@affine/web/webpack/runtime/get javascript chunk filename","webpack://@affine/web/webpack/runtime/get mini-css chunk filename","webpack://@affine/web/webpack/runtime/hasOwnProperty shorthand","webpack://@affine/web/webpack/runtime/publicPath","webpack://@affine/web/webpack/runtime/importScripts chunk loading","webpack://@affine/web/webpack/runtime/startup chunk dependencies","webpack://@affine/web/webpack/startup"],"sourcesContent":["import type { AffineTextAttributes } from '@blocksuite/blocks';\nimport type { DeltaInsert } from '@blocksuite/inline';\nimport { Document } from '@toeverything/infra';\nimport { toHexString } from 'lib0/buffer.js';\nimport { digest as lib0Digest } from 'lib0/hash/sha256';\nimport { difference } from 'lodash-es';\nimport {\n  applyUpdate,\n  Array as YArray,\n  Doc as YDoc,\n  Map as YMap,\n  type Text as YText,\n} from 'yjs';\n\nimport type { BlockIndexSchema, docIndexSchema } from '../schema';\nimport type {\n  WorkerIngoingMessage,\n  WorkerInput,\n  WorkerOutgoingMessage,\n  WorkerOutput,\n} from './types';\n\nlet cachedRootDoc: { doc: YDoc; hash: string } | null = null;\n\nasync function digest(data: Uint8Array) {\n  if (\n    globalThis.crypto &&\n    globalThis.crypto.subtle &&\n    typeof globalThis.crypto.subtle.digest === 'function'\n  ) {\n    return new Uint8Array(\n      await globalThis.crypto.subtle.digest('SHA-256', data)\n    );\n  }\n  return lib0Digest(data);\n}\n\nasync function crawlingDocData({\n  docBuffer,\n  storageDocId,\n  rootDocBuffer,\n}: WorkerInput & { type: 'doc' }): Promise<WorkerOutput> {\n  if (isEmptyUpdate(rootDocBuffer)) {\n    console.warn('[worker]: Empty root doc buffer');\n    return {};\n  }\n\n  const rootDocBufferHash = toHexString(await digest(rootDocBuffer));\n\n  let yRootDoc;\n  if (cachedRootDoc && cachedRootDoc.hash === rootDocBufferHash) {\n    yRootDoc = cachedRootDoc.doc;\n  } else {\n    yRootDoc = new YDoc();\n    applyUpdate(yRootDoc, rootDocBuffer);\n    cachedRootDoc = { doc: yRootDoc, hash: rootDocBufferHash };\n  }\n\n  let docId = null;\n  for (const [id, subdoc] of yRootDoc.getMap('spaces')) {\n    if (subdoc instanceof YDoc && storageDocId === subdoc.guid) {\n      docId = id;\n      break;\n    }\n  }\n\n  if (docId === null) {\n    return {};\n  }\n\n  const ydoc = new YDoc();\n\n  if (!isEmptyUpdate(docBuffer)) {\n    applyUpdate(ydoc, docBuffer);\n  }\n\n  let docExists: boolean | null = null;\n\n  (\n    yRootDoc.getMap('meta').get('pages') as YArray<YMap<any>> | undefined\n  )?.forEach(page => {\n    if (page.get('id') === docId) {\n      docExists = !(page.get('trash') ?? false);\n    }\n  });\n\n  if (!docExists) {\n    return {\n      deletedDoc: [docId],\n    };\n  } else {\n    const blocks = ydoc.getMap<any>('blocks');\n\n    if (blocks.size === 0) {\n      return {};\n    }\n\n    let docTitle = '';\n\n    const blockDocuments: Document<BlockIndexSchema>[] = [];\n\n    for (const block of blocks.values()) {\n      const flavour = block.get('sys:flavour')?.toString();\n      const blockId = block.get('sys:id')?.toString();\n\n      if (!flavour || !blockId) {\n        continue;\n      }\n\n      if (flavour === 'affine:page') {\n        docTitle = block.get('prop:title').toString();\n        blockDocuments.push(\n          Document.from(`${docId}:${blockId}`, {\n            docId,\n            flavour,\n            blockId,\n            content: docTitle,\n          })\n        );\n      }\n\n      if (\n        flavour === 'affine:paragraph' ||\n        flavour === 'affine:list' ||\n        flavour === 'affine:code'\n      ) {\n        const text = block.get('prop:text') as YText;\n        if (!text) {\n          continue;\n        }\n\n        const deltas: DeltaInsert<AffineTextAttributes>[] = text.toDelta();\n        const ref = deltas\n          .map(delta => {\n            if (\n              delta.attributes &&\n              delta.attributes.reference &&\n              delta.attributes.reference.pageId\n            ) {\n              return delta.attributes.reference.pageId;\n            }\n            return null;\n          })\n          .filter((link): link is string => !!link);\n\n        blockDocuments.push(\n          Document.from<BlockIndexSchema>(`${docId}:${blockId}`, {\n            docId,\n            flavour,\n            blockId,\n            content: text.toString(),\n            ref,\n          })\n        );\n      }\n\n      if (\n        flavour === 'affine:embed-linked-doc' ||\n        flavour === 'affine:embed-synced-doc'\n      ) {\n        const pageId = block.get('prop:pageId');\n        if (typeof pageId === 'string') {\n          blockDocuments.push(\n            Document.from<BlockIndexSchema>(`${docId}:${blockId}`, {\n              docId,\n              flavour,\n              blockId,\n              ref: pageId,\n            })\n          );\n        }\n      }\n\n      if (flavour === 'affine:attachment' || flavour === 'affine:image') {\n        const blobId = block.get('prop:sourceId');\n        if (typeof blobId === 'string') {\n          blockDocuments.push(\n            Document.from<BlockIndexSchema>(`${docId}:${blockId}`, {\n              docId,\n              flavour,\n              blockId,\n              blob: [blobId],\n            })\n          );\n        }\n      }\n\n      if (flavour === 'affine:surface') {\n        const texts = [];\n\n        const elementsObj = block.get('prop:elements');\n        if (\n          !(\n            elementsObj instanceof YMap &&\n            elementsObj.get('type') === '$blocksuite:internal:native$'\n          )\n        ) {\n          continue;\n        }\n        const elements = elementsObj.get('value') as YMap<any>;\n        if (!(elements instanceof YMap)) {\n          continue;\n        }\n\n        for (const element of elements.values()) {\n          if (!(element instanceof YMap)) {\n            continue;\n          }\n          const text = element.get('text') as YText;\n          if (!text) {\n            continue;\n          }\n\n          texts.push(text.toString());\n        }\n\n        blockDocuments.push(\n          Document.from<BlockIndexSchema>(`${docId}:${blockId}`, {\n            docId,\n            flavour,\n            blockId,\n            content: texts,\n          })\n        );\n      }\n\n      if (flavour === 'affine:database') {\n        const texts = [];\n        const columnsObj = block.get('prop:columns');\n        if (!(columnsObj instanceof YArray)) {\n          continue;\n        }\n        for (const column of columnsObj) {\n          if (!(column instanceof YMap)) {\n            continue;\n          }\n          if (typeof column.get('name') === 'string') {\n            texts.push(column.get('name'));\n          }\n\n          const data = column.get('data');\n          if (!(data instanceof YMap)) {\n            continue;\n          }\n          const options = data.get('options');\n          if (!(options instanceof YArray)) {\n            continue;\n          }\n          for (const option of options) {\n            if (!(option instanceof YMap)) {\n              continue;\n            }\n            const value = option.get('value');\n            if (typeof value === 'string') {\n              texts.push(value);\n            }\n          }\n        }\n\n        blockDocuments.push(\n          Document.from<BlockIndexSchema>(`${docId}:${blockId}`, {\n            docId,\n            flavour,\n            blockId,\n            content: texts,\n          })\n        );\n      }\n    }\n\n    return {\n      addedDoc: [\n        {\n          id: docId,\n          doc: Document.from<typeof docIndexSchema>(docId, {\n            title: docTitle,\n          }),\n          blocks: blockDocuments,\n        },\n      ],\n    };\n  }\n}\n\nfunction crawlingRootDocData({\n  allIndexedDocs,\n  rootDocBuffer,\n}: WorkerInput & {\n  type: 'rootDoc';\n}): WorkerOutput {\n  const ydoc = new YDoc();\n\n  applyUpdate(ydoc, rootDocBuffer);\n\n  const docs = ydoc.getMap('meta').get('pages') as\n    | YArray<YMap<any>>\n    | undefined;\n\n  if (!docs) {\n    return {};\n  }\n\n  const availableDocs = [];\n\n  for (const page of docs) {\n    const docId = page.get('id');\n\n    if (typeof docId !== 'string') {\n      continue;\n    }\n\n    const inTrash = page.get('trash') ?? false;\n\n    if (!inTrash) {\n      availableDocs.push(docId);\n    }\n  }\n\n  const needDelete = difference(allIndexedDocs, availableDocs);\n  const needAdd = difference(availableDocs, allIndexedDocs);\n\n  return {\n    reindexDoc: [...needAdd, ...needDelete].map(docId => ({\n      docId,\n      storageDocId: ydoc.getMap<YDoc>('spaces').get(docId)?.guid ?? docId,\n    })),\n  };\n}\n\nglobalThis.onmessage = async (event: MessageEvent<WorkerIngoingMessage>) => {\n  const message = event.data;\n  if (message.type === 'init') {\n    postMessage({ type: 'init', msgId: message.msgId });\n    return;\n  }\n  if (message.type === 'run') {\n    const { input } = message;\n    try {\n      let data;\n      if (input.type === 'rootDoc') {\n        data = crawlingRootDocData(input);\n      } else {\n        data = await crawlingDocData(input);\n      }\n\n      postMessage({ type: 'done', msgId: message.msgId, output: data });\n    } catch (error) {\n      postMessage({\n        type: 'failed',\n        msgId: message.msgId,\n        error: error instanceof Error ? error.message : error + '',\n      });\n    }\n  }\n};\n\ndeclare function postMessage(message: WorkerOutgoingMessage): void;\n\nfunction isEmptyUpdate(binary: Uint8Array) {\n  return (\n    binary.byteLength === 0 ||\n    (binary.byteLength === 2 && binary[0] === 0 && binary[1] === 0)\n  );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [4922,861,9574,8674], () => (__webpack_require__(97735)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames not based on template\n\tif (chunkId === 4922) return \"js/chunk.npm-async-lodash-es.27a23701.js\";\n\tif (chunkId === 861) return \"js/chunk.npm-async-lib0.9b0cd4f1.js\";\n\tif (chunkId === 9574) return \"js/chunk.npm-async-yjs.5ef92592.js\";\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + \"65285e27\" + \".js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t3941: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunk_affine_web\"] = globalThis[\"webpackChunk_affine_web\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([4922,861,9574,8674].map(__webpack_require__.e, __webpack_require__)).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["cachedRootDoc","digest","data","crypto","globalThis","subtle","Uint8Array","lib0Digest","crawlingDocData","docBuffer","storageDocId","rootDocBuffer","yRootDoc","isEmptyUpdate","console","warn","rootDocBufferHash","toHexString","hash","doc","YDoc","applyUpdate","docId","id","subdoc","getMap","guid","ydoc","docExists","get","forEach","page","deletedDoc","blocks","size","docTitle","blockDocuments","block","values","flavour","toString","blockId","push","Document","from","content","text","ref","deltas","toDelta","map","delta","attributes","reference","pageId","filter","link","blobId","blob","texts","elementsObj","YMap","elements","element","columnsObj","YArray","column","options","option","value","addedDoc","title","binary","byteLength","onmessage","event","message","type","postMessage","msgId","input","crawlingRootDocData","allIndexedDocs","docs","availableDocs","needDelete","difference","reindexDoc","output","error","Error","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","x","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","i","length","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","r","d","definition","o","defineProperty","enumerable","f","e","Promise","all","reduce","promises","chunkId","u","miniCssF","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next","then"],"sourceRoot":""}