{"version":3,"file":"js/chunk.4861.85ff1d4e.js","mappings":"4SAGO,IAAMA,EAAe,IACnB,UAACC,EAAAA,CAAMA,CAAAA,CAACC,OAAQ,UAACC,EAAAA,CAAsBA,CAAAA,CAACC,aAAc,M,KCiBzDC,EAAqB,KACzB,GAAM,CAACC,EAAoBC,EAAsB,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACvDC,EAAaC,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,KAC7BH,EAAsB,GACxB,EAAG,CAACA,EAAsB,EAE1B,MACE,WAACI,MAAAA,C,UACC,UAACC,EAAAA,EAAaA,CAAAA,CAACC,OAAQJ,C,GACvB,UAACK,EAAAA,CAAeA,CAAAA,CACdC,KAAMT,EACNU,aAAcT,C,KAItB,EAEaU,EAAS,KACpB,IAAMC,EAAUC,CAAAA,EAAAA,EAAAA,EAAAA,EAAWC,EAAAA,EAAUA,EAAEF,OAAO,CACxCG,EAAOC,CAAAA,EAAAA,EAAAA,CAAAA,EAAYJ,EAAQK,KAAK,EAChC,CAACR,EAAMS,EAAQ,CAAGhB,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAC3B,CAACiB,EAAgBC,EAAkB,CAAGlB,CAAAA,EAAAA,EAAAA,QAAAA,EAAmB,EAAE,EAE3DmB,EAAsBL,CAAAA,EAAAA,EAAAA,CAAAA,EAAYJ,EAAQU,SAAS,EAEnDC,EAAmBnB,CAAAA,EAAAA,EAAAA,WAAAA,EACvB,IACEc,EAAQT,GACRW,EAAkB,EAAE,CACtB,EACA,CAACF,EAAQ,EAGLM,EAAcpB,CAAAA,EAAAA,EAAAA,WAAAA,EAClB,IACEc,EAAQ,IACRE,EAAkBK,EACpB,EACA,CAACP,EAASE,EAAkB,EAGxBM,EAAIC,CAAAA,EAAAA,EAAAA,EAAAA,IAEV,MACE,uB,UACE,UAACC,EAAAA,EAASA,CAAAA,CAACC,MAAOH,EAAE,IAAO,E,GAC3B,UAACI,EAAAA,EAAQA,CAAAA,CAACC,KAAK,K,GACf,UAACC,EAAAA,EAAUA,CAAAA,C,SACT,UAACtC,EAAYA,CAAAA,E,GAEf,UAACuC,EAAAA,EAAQA,CAAAA,C,SACP,UAAC5B,MAAAA,CAAI6B,UCvEK,Y,SDwEPnB,EAAKoB,MAAM,CAAG,EACb,UAACC,EAAAA,EAAkBA,CAAAA,CACjBrB,KAAMA,EACNM,SAAUA,EACVG,YAAaA,C,GAGf,UAACa,EAAAA,EAAYA,CAAAA,CAACC,QAAS,UAACvC,EAAAA,CAAAA,E,OAI9B,UAACwC,EAAAA,EAAqBA,CAAAA,CACpB9B,KAAMA,EACNC,aAAca,EACdJ,eAAgBA,C,KAIxB,EAEaqB,EAAY,IAChB,UAAC7B,EAAAA,CAAAA,E","sources":["webpack://@affine/web/../core/src/pages/workspace/all-tag/header.tsx","webpack://@affine/web/../core/src/pages/workspace/all-tag/index.tsx","webpack://@affine/web/../core/src/pages/workspace/all-tag/all-tag.css.ts"],"sourcesContent":["import { Header } from '@affine/core/components/pure/header';\nimport { WorkspaceModeFilterTab } from '@affine/core/components/pure/workspace-mode-filter-tab';\n\nexport const AllTagHeader = () => {\n  return <Header center={<WorkspaceModeFilterTab activeFilter={'tags'} />} />;\n};\n","import {\n  TagListHeader,\n  VirtualizedTagList,\n} from '@affine/core/components/page-list/tags';\nimport { CreateOrEditTag } from '@affine/core/components/page-list/tags/create-tag';\nimport type { TagMeta } from '@affine/core/components/page-list/types';\nimport { DeleteTagConfirmModal, TagService } from '@affine/core/modules/tag';\nimport { useI18n } from '@affine/i18n';\nimport { useLiveData, useService } from '@toeverything/infra';\nimport { useCallback, useState } from 'react';\n\nimport {\n  ViewBody,\n  ViewHeader,\n  ViewIcon,\n  ViewTitle,\n} from '../../../modules/workbench';\nimport { EmptyTagList } from '../page-list-empty';\nimport * as styles from './all-tag.css';\nimport { AllTagHeader } from './header';\n\nconst EmptyTagListHeader = () => {\n  const [showCreateTagInput, setShowCreateTagInput] = useState(false);\n  const handleOpen = useCallback(() => {\n    setShowCreateTagInput(true);\n  }, [setShowCreateTagInput]);\n\n  return (\n    <div>\n      <TagListHeader onOpen={handleOpen} />\n      <CreateOrEditTag\n        open={showCreateTagInput}\n        onOpenChange={setShowCreateTagInput}\n      />\n    </div>\n  );\n};\n\nexport const AllTag = () => {\n  const tagList = useService(TagService).tagList;\n  const tags = useLiveData(tagList.tags$);\n  const [open, setOpen] = useState(false);\n  const [selectedTagIds, setSelectedTagIds] = useState<string[]>([]);\n\n  const tagMetas: TagMeta[] = useLiveData(tagList.tagMetas$);\n\n  const handleCloseModal = useCallback(\n    (open: boolean) => {\n      setOpen(open);\n      setSelectedTagIds([]);\n    },\n    [setOpen]\n  );\n\n  const onTagDelete = useCallback(\n    (tagIds: string[]) => {\n      setOpen(true);\n      setSelectedTagIds(tagIds);\n    },\n    [setOpen, setSelectedTagIds]\n  );\n\n  const t = useI18n();\n\n  return (\n    <>\n      <ViewTitle title={t['Tags']()} />\n      <ViewIcon icon=\"tag\" />\n      <ViewHeader>\n        <AllTagHeader />\n      </ViewHeader>\n      <ViewBody>\n        <div className={styles.body}>\n          {tags.length > 0 ? (\n            <VirtualizedTagList\n              tags={tags}\n              tagMetas={tagMetas}\n              onTagDelete={onTagDelete}\n            />\n          ) : (\n            <EmptyTagList heading={<EmptyTagListHeader />} />\n          )}\n        </div>\n      </ViewBody>\n      <DeleteTagConfirmModal\n        open={open}\n        onOpenChange={handleCloseModal}\n        selectedTagIds={selectedTagIds}\n      />\n    </>\n  );\n};\n\nexport const Component = () => {\n  return <AllTag />;\n};\n","import \"../core/src/pages/workspace/all-tag/all-tag.css.ts.vanilla.css!=!../../../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"../core/src/pages/workspace/all-tag/all-tag.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xbmNnYjJ5MCB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGZsZXg6IDE7CiAgaGVpZ2h0OiAxMDAlOwogIHdpZHRoOiAxMDAlOwp9\\\"}!../../../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var body = '_1ncgb2y0';"],"names":["AllTagHeader","Header","center","WorkspaceModeFilterTab","activeFilter","EmptyTagListHeader","showCreateTagInput","setShowCreateTagInput","useState","handleOpen","useCallback","div","TagListHeader","onOpen","CreateOrEditTag","open","onOpenChange","AllTag","tagList","useService","TagService","tags","useLiveData","tags$","setOpen","selectedTagIds","setSelectedTagIds","tagMetas","tagMetas$","handleCloseModal","onTagDelete","tagIds","t","useI18n","ViewTitle","title","ViewIcon","icon","ViewHeader","ViewBody","className","length","VirtualizedTagList","EmptyTagList","heading","DeleteTagConfirmModal","Component"],"sourceRoot":""}