{"version":3,"file":"js/chunk.601.b053e62d.js","mappings":"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","sources":["webpack://@affine/web/../core/src/components/blocksuite/block-suite-header/present/use-present.ts","webpack://@affine/web/../core/src/components/blocksuite/block-suite-mode-switch/style.css.ts","webpack://@affine/web/../core/src/components/blocksuite/block-suite-mode-switch/index.tsx","webpack://@affine/web/../core/src/components/page-detail-editor.tsx","webpack://@affine/web/../core/src/components/page-detail-editor.css.ts","webpack://@affine/web/../core/src/hooks/use-block-suite-workspace-page.ts","webpack://@affine/web/../core/src/hooks/use-global-state.ts"],"sourcesContent":["import { useActiveBlocksuiteEditor } from '@affine/core/hooks/use-block-suite-editor';\nimport type { EdgelessRootService } from '@blocksuite/blocks';\nimport { useCallback, useEffect, useState } from 'react';\n\nexport const usePresent = () => {\n  const [isPresent, setIsPresent] = useState(false);\n  const [editor] = useActiveBlocksuiteEditor();\n\n  const handlePresent = useCallback(\n    (enable = true) => {\n      isPresent;\n      const editorHost = editor?.host;\n      if (!editorHost) return;\n\n      // TODO(@catsjuice): use surfaceService subAtom\n      const enterOrLeavePresentationMode = () => {\n        const edgelessRootService = editorHost.spec.getService(\n          'affine:page'\n        ) as EdgelessRootService;\n\n        if (!edgelessRootService) {\n          return;\n        }\n\n        const activeTool = edgelessRootService.tool.edgelessTool.type;\n        const isFrameNavigator = activeTool === 'frameNavigator';\n        if ((enable && isFrameNavigator) || (!enable && !isFrameNavigator))\n          return;\n\n        edgelessRootService.tool.setEdgelessTool({\n          type: enable ? 'frameNavigator' : 'default',\n        });\n      };\n\n      enterOrLeavePresentationMode();\n      setIsPresent(enable);\n    },\n    [editor?.host, isPresent]\n  );\n\n  useEffect(() => {\n    if (!isPresent) return;\n\n    const editorHost = editor?.host;\n    if (!editorHost) return;\n\n    const edgelessPage = editorHost?.querySelector('affine-edgeless-root');\n    if (!edgelessPage) return;\n\n    return edgelessPage.slots.edgelessToolUpdated.on(() => {\n      setIsPresent(edgelessPage.edgelessTool.type === 'frameNavigator');\n    }).dispose;\n  }, [editor?.host, isPresent]);\n\n  return {\n    isPresent,\n    handlePresent,\n  };\n};\n","import \"../core/src/components/blocksuite/block-suite-mode-switch/style.css.ts.vanilla.css!=!../../../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"../core/src/components/blocksuite/block-suite-mode-switch/style.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8yY3Q1ZjYwIHsKICB3aWR0aDogMjRweDsKICBoZWlnaHQ6IDI0cHg7Cn0KLl8yY3Q1ZjYwIHN2ZyBwYXRoIHsKICBzdHJva2U6IGN1cnJlbnRDb2xvcjsKfQ==\\\"}!../../../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var switchItem = '_2ct5f60';","import { RadioGroup, type RadioItem, toast, Tooltip } from '@affine/component';\nimport { registerAffineCommand } from '@affine/core/commands';\nimport { track } from '@affine/core/mixpanel';\nimport { useI18n } from '@affine/i18n';\nimport { EdgelessIcon, PageIcon } from '@blocksuite/icons/rc';\nimport {\n  type DocMode,\n  DocsService,\n  useLiveData,\n  useService,\n} from '@toeverything/infra';\nimport { useCallback, useEffect, useMemo } from 'react';\n\nimport { switchItem } from './style.css';\nimport { EdgelessSwitchItem, PageSwitchItem } from './switch-items';\n\nexport interface EditorModeSwitchProps {\n  pageId: string;\n  isPublic?: boolean;\n  publicMode?: DocMode;\n}\n\nconst EdgelessRadioItem: RadioItem = {\n  value: 'edgeless',\n  label: <EdgelessSwitchItem />,\n  testId: 'switch-edgeless-mode-button',\n  className: switchItem,\n};\nconst PageRadioItem: RadioItem = {\n  value: 'page',\n  label: <PageSwitchItem />,\n  testId: 'switch-page-mode-button',\n  className: switchItem,\n};\n\nexport const EditorModeSwitch = ({\n  pageId,\n  isPublic,\n  publicMode,\n}: EditorModeSwitchProps) => {\n  const t = useI18n();\n  const docsService = useService(DocsService);\n  const doc = useLiveData(docsService.list.doc$(pageId));\n  const trash = useLiveData(doc?.trash$);\n  const currentMode = useLiveData(doc?.mode$);\n\n  const togglePage = useCallback(() => {\n    if (currentMode === 'page' || isPublic || trash) return;\n    doc?.setMode('page');\n    toast(t['com.affine.toastMessage.pageMode']());\n    track.$.header.actions.switchPageMode({ mode: 'page' });\n  }, [currentMode, doc, isPublic, t, trash]);\n\n  const toggleEdgeless = useCallback(() => {\n    if (currentMode === 'edgeless' || isPublic || trash) return;\n    doc?.setMode('edgeless');\n    toast(t['com.affine.toastMessage.edgelessMode']());\n    track.$.header.actions.switchPageMode({ mode: 'edgeless' });\n  }, [currentMode, doc, isPublic, t, trash]);\n\n  const onModeChange = useCallback(\n    (mode: DocMode) => {\n      mode === 'page' ? togglePage() : toggleEdgeless();\n    },\n    [toggleEdgeless, togglePage]\n  );\n\n  const shouldHide = useCallback(\n    (mode: DocMode) =>\n      (trash && currentMode !== mode) || (isPublic && publicMode !== mode),\n    [currentMode, isPublic, publicMode, trash]\n  );\n\n  useEffect(() => {\n    if (trash || isPublic || currentMode === undefined) return;\n    return registerAffineCommand({\n      id: 'affine:doc-mode-switch',\n      category: 'editor:page',\n      label:\n        currentMode === 'page'\n          ? t['com.affine.cmdk.switch-to-edgeless']()\n          : t['com.affine.cmdk.switch-to-page'](),\n      icon: currentMode === 'page' ? <EdgelessIcon /> : <PageIcon />,\n      keyBinding: {\n        binding: 'Alt+KeyS',\n        capture: true,\n      },\n      run: () => onModeChange(currentMode === 'edgeless' ? 'page' : 'edgeless'),\n    });\n  }, [currentMode, isPublic, onModeChange, t, trash]);\n\n  return (\n    <Tooltip\n      content={t['Switch']()}\n      shortcut={['$alt', 'S']}\n      side=\"bottom\"\n      options={{ hidden: isPublic || trash }}\n    >\n      <div>\n        <PureEditorModeSwitch\n          mode={currentMode}\n          setMode={onModeChange}\n          hidePage={shouldHide('page')}\n          hideEdgeless={shouldHide('edgeless')}\n        />\n      </div>\n    </Tooltip>\n  );\n};\n\nexport interface PureEditorModeSwitchProps {\n  mode?: DocMode;\n  setMode: (mode: DocMode) => void;\n  hidePage?: boolean;\n  hideEdgeless?: boolean;\n}\n\nexport const PureEditorModeSwitch = ({\n  mode,\n  setMode,\n  hidePage,\n  hideEdgeless,\n}: PureEditorModeSwitchProps) => {\n  const items = useMemo(\n    () => [\n      ...(hidePage ? [] : [PageRadioItem]),\n      ...(hideEdgeless ? [] : [EdgelessRadioItem]),\n    ],\n    [hideEdgeless, hidePage]\n  );\n  return (\n    <RadioGroup\n      iconMode\n      itemHeight={24}\n      borderRadius={8}\n      padding={4}\n      gap={8}\n      value={mode}\n      items={items}\n      onChange={setMode}\n    />\n  );\n};\n","import './page-detail-editor.css';\n\nimport { useDocCollectionPage } from '@affine/core/hooks/use-block-suite-workspace-page';\nimport { assertExists, DisposableGroup } from '@blocksuite/global/utils';\nimport type { AffineEditorContainer } from '@blocksuite/presets';\nimport type { Doc as BlockSuiteDoc, DocCollection } from '@blocksuite/store';\nimport {\n  type DocMode,\n  DocService,\n  fontStyleOptions,\n  useLiveData,\n  useService,\n} from '@toeverything/infra';\nimport clsx from 'clsx';\nimport type { CSSProperties } from 'react';\nimport { memo, Suspense, useCallback, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { useAppSettingHelper } from '../hooks/affine/use-app-setting-helper';\nimport { BlockSuiteEditor as Editor } from './blocksuite/block-suite-editor';\nimport * as styles from './page-detail-editor.css';\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var currentEditor: AffineEditorContainer | undefined;\n}\n\nexport type OnLoadEditor = (\n  page: BlockSuiteDoc,\n  editor: AffineEditorContainer\n) => () => void;\n\nexport interface PageDetailEditorProps {\n  isPublic?: boolean;\n  publishMode?: DocMode;\n  docCollection: DocCollection;\n  pageId: string;\n  onLoad?: OnLoadEditor;\n}\n\nfunction useRouterHash() {\n  return useLocation().hash.substring(1);\n}\n\nconst PageDetailEditorMain = memo(function PageDetailEditorMain({\n  page,\n  onLoad,\n  isPublic,\n  publishMode,\n}: PageDetailEditorProps & { page: BlockSuiteDoc }) {\n  const currentMode = useLiveData(useService(DocService).doc.mode$);\n  const mode = useMemo(() => {\n    const shareMode = publishMode || currentMode;\n\n    if (isPublic) {\n      return shareMode;\n    }\n    return currentMode;\n  }, [isPublic, publishMode, currentMode]);\n\n  const { appSettings } = useAppSettingHelper();\n\n  const value = useMemo(() => {\n    const fontStyle = fontStyleOptions.find(\n      option => option.key === appSettings.fontStyle\n    );\n    assertExists(fontStyle);\n    return fontStyle.value;\n  }, [appSettings.fontStyle]);\n\n  const blockId = useRouterHash();\n\n  const onLoadEditor = useCallback(\n    (editor: AffineEditorContainer) => {\n      // debug current detail editor\n      globalThis.currentEditor = editor;\n      const disposableGroup = new DisposableGroup();\n      localStorage.setItem('last_page_id', page.id);\n\n      if (onLoad) {\n        // Invoke onLoad once the editor has been mounted to the DOM.\n        editor.updateComplete\n          .then(() => editor.host?.updateComplete)\n          .then(() => {\n            disposableGroup.add(onLoad(page, editor));\n          })\n          .catch(console.error);\n      }\n\n      return () => {\n        disposableGroup.dispose();\n      };\n    },\n    [onLoad, page]\n  );\n\n  return (\n    <Editor\n      className={clsx(styles.editor, {\n        'full-screen': !isPublic && appSettings.fullWidthLayout,\n        'is-public': isPublic,\n      })}\n      style={\n        {\n          '--affine-font-family': value,\n        } as CSSProperties\n      }\n      mode={mode}\n      page={page}\n      shared={isPublic}\n      defaultSelectedBlockId={blockId}\n      onLoadEditor={onLoadEditor}\n    />\n  );\n});\n\nexport const PageDetailEditor = (props: PageDetailEditorProps) => {\n  const { docCollection, pageId } = props;\n  const page = useDocCollectionPage(docCollection, pageId);\n  if (!page) {\n    return null;\n  }\n  return (\n    <Suspense>\n      <PageDetailEditorMain {...props} page={page} />\n    </Suspense>\n  );\n};\n","import \"../core/src/components/page-detail-editor.css.ts.vanilla.css!=!../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"../core/src/components/page-detail-editor.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xZ2dxN3VxMCB7CiAgZmxleDogMTsKfQouXzFnZ3E3dXEwLmZ1bGwtc2NyZWVuIHsKICAtLWFmZmluZS1lZGl0b3Itd2lkdGg6IDEwMCU7CiAgLS1hZmZpbmUtZWRpdG9yLXNpZGUtcGFkZGluZzogNzJweDsKfQpAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4MDBweCkgewogIC5fMWdncTd1cTAuaXMtcHVibGljIHsKICAgIC0tYWZmaW5lLWVkaXRvci13aWR0aDogMTAwJTsKICAgIC0tYWZmaW5lLWVkaXRvci1zaWRlLXBhZGRpbmc6IDI0cHg7CiAgfQp9\\\"}!../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var editor = '_1ggq7uq0';","import { DebugLogger } from '@affine/debug';\nimport { DisposableGroup } from '@blocksuite/global/utils';\nimport type { Doc, DocCollection } from '@blocksuite/store';\nimport { useEffect, useState } from 'react';\n\nconst logger = new DebugLogger('use-doc-collection-page');\n\nexport function useDocCollectionPage(\n  docCollection: DocCollection,\n  pageId: string | null\n): Doc | null {\n  const [page, setPage] = useState(\n    pageId ? docCollection.getDoc(pageId) : null\n  );\n\n  useEffect(() => {\n    const group = new DisposableGroup();\n    group.add(\n      docCollection.slots.docAdded.on(id => {\n        if (pageId === id) {\n          setPage(docCollection.getDoc(id));\n        }\n      })\n    );\n    group.add(\n      docCollection.slots.docRemoved.on(id => {\n        if (pageId === id) {\n          setPage(null);\n        }\n      })\n    );\n    return () => {\n      group.dispose();\n    };\n  }, [docCollection, pageId]);\n\n  useEffect(() => {\n    if (page && !page.loaded) {\n      try {\n        page.load();\n      } catch (err) {\n        logger.error('Failed to load page', err);\n      }\n    }\n  }, [page]);\n\n  return page;\n}\n","import { noop } from 'lodash-es';\nimport { useEffect } from 'react';\n\nexport function useDocumentTitle(newTitle?: string | null) {\n  useEffect(() => {\n    if (environment.isDesktop || !newTitle) {\n      return noop;\n    }\n\n    const oldTitle = document.title;\n    document.title = newTitle;\n    return () => {\n      document.title = oldTitle;\n    };\n  }, [newTitle]);\n}\n\nexport function usePageDocumentTitle(pageTitle?: string) {\n  useDocumentTitle(pageTitle ? `${pageTitle} · AFFiNE` : null);\n}\n"],"names":["usePresent","isPresent","setIsPresent","useState","editor","useActiveBlocksuiteEditor","handlePresent","useCallback","enable","editorHost","host","enterOrLeavePresentationMode","edgelessRootService","spec","getService","isFrameNavigator","activeTool","tool","edgelessTool","type","setEdgelessTool","useEffect","edgelessPage","querySelector","slots","edgelessToolUpdated","on","dispose","switchItem","EdgelessRadioItem","value","label","EdgelessSwitchItem","testId","className","PageRadioItem","PageSwitchItem","EditorModeSwitch","pageId","isPublic","publicMode","t","useI18n","docsService","useService","DocsService","doc","useLiveData","list","doc$","trash","trash$","currentMode","mode$","togglePage","setMode","toast","track","$","header","actions","switchPageMode","mode","toggleEdgeless","onModeChange","shouldHide","undefined","registerAffineCommand","id","category","icon","EdgelessIcon","PageIcon","keyBinding","binding","capture","run","Tooltip","content","shortcut","side","options","hidden","div","PureEditorModeSwitch","hidePage","hideEdgeless","items","useMemo","RadioGroup","iconMode","itemHeight","borderRadius","padding","gap","onChange","PageDetailEditorMain","memo","page","onLoad","publishMode","DocService","shareMode","appSettings","useAppSettingHelper","fontStyle","fontStyleOptions","find","option","key","assertExists","blockId","useLocation","hash","substring","onLoadEditor","globalThis","currentEditor","disposableGroup","DisposableGroup","localStorage","setItem","updateComplete","then","add","catch","console","error","Editor","clsx","fullWidthLayout","style","shared","defaultSelectedBlockId","PageDetailEditor","docCollection","props","useDocCollectionPage","Suspense","logger","DebugLogger","setPage","getDoc","group","docAdded","docRemoved","loaded","load","err","usePageDocumentTitle","pageTitle","newTitle","environment","isDesktop","noop","oldTitle","document","title"],"sourceRoot":""}