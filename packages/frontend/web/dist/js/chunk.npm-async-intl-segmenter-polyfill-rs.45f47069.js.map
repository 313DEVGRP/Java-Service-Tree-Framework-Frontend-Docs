{"version":3,"file":"js/chunk.npm-async-intl-segmenter-polyfill-rs.45f47069.js","mappings":"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","sources":["webpack://@affine/web/../../../node_modules/intl-segmenter-polyfill-rs/esm/intl_segmenter_polyfill_rs_bg.js","webpack://@affine/web/../../../node_modules/intl-segmenter-polyfill-rs/esm/intl_segmenter_polyfill_rs.mjs"],"sourcesContent":["let wasm;\nexport function __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet cachedFloat64Memory0 = null;\n\nfunction getFloat64Memory0() {\n    if (cachedFloat64Memory0 === null || cachedFloat64Memory0.byteLength === 0) {\n        cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachedFloat64Memory0;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n/**\n*/\nexport function start() {\n    wasm.start();\n}\n\n/**\n*/\nexport class Segmenter {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_segmenter_free(ptr);\n    }\n    /**\n    */\n    static () {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.segmenter_(retptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {any} locales\n    * @param {any} options\n    */\n    constructor(locales, options) {\n        const ret = wasm.segmenter_new(addHeapObject(locales), addHeapObject(options));\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * @param {string} input\n    * @returns {Segments}\n    */\n    segment(input) {\n        const ptr0 = passStringToWasm0(input, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.segmenter_segment(this.__wbg_ptr, ptr0, len0);\n        return Segments.__wrap(ret);\n    }\n}\n/**\n*/\nexport class Segments {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Segments.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_segments_free(ptr);\n    }\n    /**\n    * @returns {any}\n    */\n    next() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.segments_next(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nexport function __wbg_segments_new(arg0) {\n    const ret = Segments.__wrap(arg0);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_is_undefined(arg0) {\n    const ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nexport function __wbindgen_in(arg0, arg1) {\n    const ret = getObject(arg0) in getObject(arg1);\n    return ret;\n};\n\nexport function __wbindgen_string_get(arg0, arg1) {\n    const obj = getObject(arg1);\n    const ret = typeof(obj) === 'string' ? obj : undefined;\n    var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len1;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n};\n\nexport function __wbindgen_is_object(arg0) {\n    const val = getObject(arg0);\n    const ret = typeof(val) === 'object' && val !== null;\n    return ret;\n};\n\nexport function __wbindgen_string_new(arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_makeiter_99ccd6b658d32814(arg0) {\n    __make_iter(getObject(arg0));\n};\n\nexport function __wbg_new_abda76e883ba8a5f() {\n    const ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_stack_658279fe44541cf6(arg0, arg1) {\n    const ret = getObject(arg1).stack;\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len1;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n};\n\nexport function __wbg_error_f851667af71bcfc6(arg0, arg1) {\n    let deferred0_0;\n    let deferred0_1;\n    try {\n        deferred0_0 = arg0;\n        deferred0_1 = arg1;\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n    }\n};\n\nexport function __wbindgen_object_clone_ref(arg0) {\n    const ret = getObject(arg0);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_jsval_loose_eq(arg0, arg1) {\n    const ret = getObject(arg0) == getObject(arg1);\n    return ret;\n};\n\nexport function __wbindgen_boolean_get(arg0) {\n    const v = getObject(arg0);\n    const ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n    return ret;\n};\n\nexport function __wbindgen_number_get(arg0, arg1) {\n    const obj = getObject(arg1);\n    const ret = typeof(obj) === 'number' ? obj : undefined;\n    getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n    getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n};\n\nexport function __wbindgen_error_new(arg0, arg1) {\n    const ret = new Error(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_number_new(arg0) {\n    const ret = arg0;\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_bigint_from_u64(arg0) {\n    const ret = BigInt.asUintN(64, arg0);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_getwithrefkey_4a92a5eca60879b9(arg0, arg1) {\n    const ret = getObject(arg0)[getObject(arg1)];\n    return addHeapObject(ret);\n};\n\nexport function __wbg_set_9182712abebf82ef(arg0, arg1, arg2) {\n    getObject(arg0)[takeObject(arg1)] = takeObject(arg2);\n};\n\nexport function __wbg_new_9fb8d994e1c0aaac() {\n    const ret = new Object();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_instanceof_ArrayBuffer_e7d53d51371448e2(arg0) {\n    let result;\n    try {\n        result = getObject(arg0) instanceof ArrayBuffer;\n    } catch (_) {\n        result = false;\n    }\n    const ret = result;\n    return ret;\n};\n\nexport function __wbg_getPrototypeOf_a6e87842bce6351b(arg0) {\n    const ret = Object.getPrototypeOf(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_new_4a703d5c73064dfb(arg0, arg1) {\n    const ret = new TypeError(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_buffer_a448f833075b71ba(arg0) {\n    const ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_new_8f67e318f15d7254(arg0) {\n    const ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_set_2357bf09366ee480(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n};\n\nexport function __wbg_length_1d25fa9e4ac21ce7(arg0) {\n    const ret = getObject(arg0).length;\n    return ret;\n};\n\nexport function __wbg_instanceof_Uint8Array_bced6f43aed8c1aa(arg0) {\n    let result;\n    try {\n        result = getObject(arg0) instanceof Uint8Array;\n    } catch (_) {\n        result = false;\n    }\n    const ret = result;\n    return ret;\n};\n\nexport function __wbindgen_debug_string(arg0, arg1) {\n    const ret = debugString(getObject(arg1));\n    const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len1;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n};\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport function __wbindgen_memory() {\n    const ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\nfunction __make_iter(proto) { proto[Symbol.iterator] = function () { return this; }};\n","import * as wasm from \"./intl_segmenter_polyfill_rs_bg.wasm\";\nimport { __wbg_set_wasm } from \"./intl_segmenter_polyfill_rs_bg.js\";\n__wbg_set_wasm(wasm);\nexport * from \"./intl_segmenter_polyfill_rs_bg.js\";\n\nwasm.__wbindgen_start();\n"],"names":["wasm","__wbg_set_wasm","val","heap","fill","undefined","push","heap_next","length","takeObject","idx","ret","WASM_VECTOR_LEN","cachedUint8Memory0","getUint8Memory0","byteLength","Uint8Array","memory","buffer","cachedTextEncoder","TextEncoder","module","require","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","ptr","subarray","len","mem","offset","code","charCodeAt","slice","cachedInt32Memory0","getInt32Memory0","Int32Array","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","getStringFromWasm0","decode","addHeapObject","obj","cachedFloat64Memory0","start","Segmenter","__destroy_into_raw","__wbg_ptr","free","__wbg_segmenter_free","static","retptr","__wbindgen_add_to_stack_pointer","segmenter_","r0","constructor","locales","options","segmenter_new","segment","input","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","segmenter_segment","Segments","__wrap","Object","create","prototype","__wbg_segments_free","next","segments_next","r1","__wbindgen_object_drop_ref","arg0","__wbg_segments_new","__wbindgen_is_undefined","getObject","__wbindgen_in","arg1","__wbindgen_string_get","ptr1","isLikeNone","len1","__wbindgen_is_object","__wbindgen_string_new","__wbg_makeiter_99ccd6b658d32814","proto","Symbol","iterator","__wbg_new_abda76e883ba8a5f","__wbg_stack_658279fe44541cf6","stack","__wbg_error_f851667af71bcfc6","deferred0_0","deferred0_1","console","error","__wbindgen_free","__wbindgen_object_clone_ref","__wbindgen_jsval_loose_eq","__wbindgen_boolean_get","v","__wbindgen_number_get","getFloat64Memory0","Float64Array","__wbindgen_error_new","__wbindgen_number_new","__wbindgen_bigint_from_u64","BigInt","asUintN","__wbg_getwithrefkey_4a92a5eca60879b9","__wbg_set_9182712abebf82ef","arg2","__wbg_new_9fb8d994e1c0aaac","__wbg_instanceof_ArrayBuffer_e7d53d51371448e2","result","ArrayBuffer","_","__wbg_getPrototypeOf_a6e87842bce6351b","getPrototypeOf","__wbg_new_4a703d5c73064dfb","__wbg_buffer_a448f833075b71ba","__wbg_new_8f67e318f15d7254","__wbg_set_2357bf09366ee480","__wbg_length_1d25fa9e4ac21ce7","__wbg_instanceof_Uint8Array_bced6f43aed8c1aa","__wbindgen_debug_string","debugString","className","type","description","name","Array","isArray","debug","i","builtInMatches","exec","toString","call","JSON","stringify","Error","message","__wbindgen_throw","__wbindgen_memory"],"sourceRoot":""}