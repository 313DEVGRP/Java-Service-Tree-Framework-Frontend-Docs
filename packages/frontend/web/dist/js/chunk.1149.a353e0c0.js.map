{"version":3,"file":"js/chunk.1149.a353e0c0.js","mappings":"8UAIO,IAAMA,EAAkB,IAE3B,UAACC,EAAAA,CAAMA,CAAAA,CACLC,OAAQ,UAACC,EAAAA,CAAsBA,CAAAA,CAACC,aAAc,M,GAC9CC,MAAO,UAACC,EAAAA,EAAeA,CAAAA,CAAAA,E,GCmBhBC,EAAY,CAAC,CAAEC,MAAAA,CAAK,CAAsB,IACrD,IAAMC,EAAgBC,CAAAA,EAAAA,EAAAA,EAAAA,EAAWC,EAAAA,CAAoBA,EAAEF,aAAa,CAC9DG,EAAmBF,CAAAA,EAAAA,EAAAA,EAAAA,EAAWG,EAAAA,CAAgBA,EAAEC,SAAS,CACzDC,EAAYC,CAAAA,EAAAA,EAAAA,CAAAA,EAAqBJ,EAAiBK,aAAa,EAE/DC,EAAUR,CAAAA,EAAAA,EAAAA,EAAAA,EAAWS,EAAAA,EAAUA,EAAED,OAAO,CACxCE,EAAaC,CAAAA,EAAAA,EAAAA,CAAAA,EAAYH,EAAQI,WAAW,CAACd,IAE7Ce,EAAUF,CAAAA,EAAAA,EAAAA,CAAAA,EAAYD,GAAYI,UAElCC,EAAoBC,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,KAChC,IAAMC,EAAa,IAAIC,IAAIL,GAC3B,OAAOR,EAAUc,MAAM,CAACC,GAAQH,EAAWI,GAAG,CAACD,EAAKE,EAAE,EACxD,EAAG,CAACT,EAASR,EAAU,EAEjBkB,EAAeC,CAAAA,EAAAA,EAAAA,EAAAA,IACfC,EAAUd,CAAAA,EAAAA,EAAAA,CAAAA,EAAYD,GAAYgB,cAexC,CAbAC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,GAAIJ,GAAgBb,EAIlB,OAHAX,EAAcD,KAAK,CAAC8B,GAAG,CAAClB,EAAWY,EAAE,EACrCvB,EAAc8B,KAAK,CAACD,GAAG,CAAC,IAEjB,KACL7B,EAAcD,KAAK,CAAC8B,GAAG,CAAC,MACxB7B,EAAc8B,KAAK,CAACD,GAAG,CAAC,GAC1B,CAGJ,EAAG,CAAClB,EAAYX,EAAewB,EAAa,EAEvCb,GAKH,uB,UACE,UAACoB,EAAAA,EAASA,CAAAA,CAACC,MAAON,GAAW,U,GAC7B,UAACO,EAAAA,EAAQA,CAAAA,CAACC,KAAK,K,GACf,UAACC,EAAAA,EAAUA,CAAAA,C,SACT,UAAC5C,EAAeA,CAAAA,E,GAElB,UAAC6C,EAAAA,EAAQA,CAAAA,C,SACP,UAACC,MAAAA,CAAIC,UCrEK,U,SDsEPtB,EAAkBuB,MAAM,CAAG,EAC1B,UAACC,EAAAA,EAAmBA,CAAAA,CAClBC,IAAK9B,EACL+B,SAAU1B,C,GAGZ,UAAC2B,EAAAA,EAAaA,CAAAA,CACZC,KAAK,MACLC,QACE,UAACC,EAAAA,EAAiBA,CAAAA,CAChBL,IAAK9B,EACLoC,YAAa5C,EAAiBoB,EAAE,GAGpCf,cAAeL,EAAiBK,aAAa,E,QA1BhD,UAACwC,EAAAA,YAAYA,CAAAA,CAAAA,EAiCxB,EAEaC,EAAY,KACvB,IAAMC,EAASC,CAAAA,EAAAA,EAAAA,CAAAA,IAEf,MAAO,UAACrD,EAAAA,CAAUC,MAAOmD,EAAOnD,KAAK,EACvC,C","sources":["webpack://@affine/web/../core/src/pages/workspace/tag/header.tsx","webpack://@affine/web/../core/src/pages/workspace/tag/index.tsx","webpack://@affine/web/../core/src/pages/workspace/tag/index.css.ts"],"sourcesContent":["import { PageDisplayMenu } from '@affine/core/components/page-list';\nimport { Header } from '@affine/core/components/pure/header';\nimport { WorkspaceModeFilterTab } from '@affine/core/components/pure/workspace-mode-filter-tab';\n\nexport const TagDetailHeader = () => {\n  return (\n    <Header\n      center={<WorkspaceModeFilterTab activeFilter={'tags'} />}\n      right={<PageDisplayMenu />}\n    />\n  );\n};\n","import {\n  TagPageListHeader,\n  VirtualizedPageList,\n} from '@affine/core/components/page-list';\nimport { useBlockSuiteDocMeta } from '@affine/core/hooks/use-block-suite-page-meta';\nimport { TagService } from '@affine/core/modules/tag';\nimport {\n  useIsActiveView,\n  ViewBody,\n  ViewHeader,\n  ViewIcon,\n  ViewTitle,\n} from '@affine/core/modules/workbench';\nimport {\n  GlobalContextService,\n  useLiveData,\n  useService,\n  WorkspaceService,\n} from '@toeverything/infra';\nimport { useEffect, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { PageNotFound } from '../../404';\nimport { EmptyPageList } from '../page-list-empty';\nimport { TagDetailHeader } from './header';\nimport * as styles from './index.css';\n\nexport const TagDetail = ({ tagId }: { tagId?: string }) => {\n  const globalContext = useService(GlobalContextService).globalContext;\n  const currentWorkspace = useService(WorkspaceService).workspace;\n  const pageMetas = useBlockSuiteDocMeta(currentWorkspace.docCollection);\n\n  const tagList = useService(TagService).tagList;\n  const currentTag = useLiveData(tagList.tagByTagId$(tagId));\n\n  const pageIds = useLiveData(currentTag?.pageIds$);\n\n  const filteredPageMetas = useMemo(() => {\n    const pageIdsSet = new Set(pageIds);\n    return pageMetas.filter(page => pageIdsSet.has(page.id));\n  }, [pageIds, pageMetas]);\n\n  const isActiveView = useIsActiveView();\n  const tagName = useLiveData(currentTag?.value$);\n\n  useEffect(() => {\n    if (isActiveView && currentTag) {\n      globalContext.tagId.set(currentTag.id);\n      globalContext.isTag.set(true);\n\n      return () => {\n        globalContext.tagId.set(null);\n        globalContext.isTag.set(false);\n      };\n    }\n    return;\n  }, [currentTag, globalContext, isActiveView]);\n\n  if (!currentTag) {\n    return <PageNotFound />;\n  }\n\n  return (\n    <>\n      <ViewTitle title={tagName ?? 'Untitled'} />\n      <ViewIcon icon=\"tag\" />\n      <ViewHeader>\n        <TagDetailHeader />\n      </ViewHeader>\n      <ViewBody>\n        <div className={styles.body}>\n          {filteredPageMetas.length > 0 ? (\n            <VirtualizedPageList\n              tag={currentTag}\n              listItem={filteredPageMetas}\n            />\n          ) : (\n            <EmptyPageList\n              type=\"all\"\n              heading={\n                <TagPageListHeader\n                  tag={currentTag}\n                  workspaceId={currentWorkspace.id}\n                />\n              }\n              docCollection={currentWorkspace.docCollection}\n            />\n          )}\n        </div>\n      </ViewBody>\n    </>\n  );\n};\n\nexport const Component = () => {\n  const params = useParams();\n\n  return <TagDetail tagId={params.tagId} />;\n};\n","import \"../core/src/pages/workspace/tag/index.css.ts.vanilla.css!=!../../../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"../core/src/pages/workspace/tag/index.css.ts.vanilla.css\\\",\\\"source\\\":\\\"LmJyOWUxcTAgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBmbGV4OiAxOwogIGhlaWdodDogMTAwJTsKICB3aWR0aDogMTAwJTsKfQ==\\\"}!../../../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var body = 'br9e1q0';"],"names":["TagDetailHeader","Header","center","WorkspaceModeFilterTab","activeFilter","right","PageDisplayMenu","TagDetail","tagId","globalContext","useService","GlobalContextService","currentWorkspace","WorkspaceService","workspace","pageMetas","useBlockSuiteDocMeta","docCollection","tagList","TagService","currentTag","useLiveData","tagByTagId$","pageIds","pageIds$","filteredPageMetas","useMemo","pageIdsSet","Set","filter","page","has","id","isActiveView","useIsActiveView","tagName","value$","useEffect","set","isTag","ViewTitle","title","ViewIcon","icon","ViewHeader","ViewBody","div","className","length","VirtualizedPageList","tag","listItem","EmptyPageList","type","heading","TagPageListHeader","workspaceId","PageNotFound","Component","params","useParams"],"sourceRoot":""}